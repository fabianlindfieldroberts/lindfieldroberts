"""
Django settings for lindfieldroberts project.

Generated by 'django-admin startproject' using Django 3.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
# Used to connect to Heroku
import django_heroku
# Used for subdomains
from django_hosts import patterns, host

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# SECURITY WARNING: keep the secret key used in production secret
SECRET_KEY = os.environ.get('LINDFIELDROBERTS_SECRET_KEY')
# SECURITY WARNING: don't run with debug turned on in production
# Note: If this is set to false then static files don't auto update during dev
DEBUG = False
# SECURITY WARNING: Should be set to true in production
CSRF_COOKIE_SECURE = True
# SECURITY WARNING: Should be set to true in production
SESSION_COOKIE_SECURE = True
# SECURITY WARNING: Prevents traffic over HTTP, should be set to nonzero value in production
# Read https://docs.djangoproject.com/en/3.1/ref/middleware/#http-strict-transport-security before assigning value
SECURE_HSTS_SECONDS = 0
# SECURITY WARNING: For performance reasons, itâ€™s preferable to do these redirects outside of Django
# Set to true if no alternate option available
SECURE_SSL_REDIRECT = False


ALLOWED_HOSTS = [
    'www.lindfieldroberts', 
    'fabian.lindfieldroberts',
    'geireann.lindfieldroberts',
    'localhost',
    'fabian.localhost',
    'geireann.localhost'
]

# Application definition

INSTALLED_APPS = [
    'about.apps.AboutConfig',
    'geireann.apps.GeireannConfig',
    'fabian.apps.FabianConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    # Serve static files like css, js, and images
    'django.contrib.staticfiles',
    # Used for subdomains
    'django_hosts'
]

MIDDLEWARE = [
    
    # Should be at beginning of middleware list, used for subdomains
    'django_hosts.middleware.HostsRequestMiddleware',

    # Simplified static file serving.
    # https://warehouse.python.org/project/whitenoise/
    'whitenoise.middleware.WhiteNoiseMiddleware',

    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # Should be at end of middleware list, used for subdomains
    'django_hosts.middleware.HostsResponseMiddleware'
]

ROOT_URLCONF = 'lindfieldroberts.urls'
# Shows the path to the URL scheme of all the subdomains on the website
ROOT_HOSTCONF = 'lindfieldroberts.hosts'
DEFAULT_HOST= 'www'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'lindfieldroberts.wsgi.application'


# Database
DATABASES_AVAILABLE = {
    'production': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': os.environ.get('LINDFIELDROBERTS_DATABASE_NAME'),
        'USER': os.environ.get('LINDFIELDROBERTS_DATABASE_USER'),
        'PASSWORD': os.environ.get('LINDFIELDROBERTS_DATABASE_PASSWORD'),
        'HOST': os.environ.get('LINDFIELDROBERTS_DATABASE_HOST'),
        'PORT': os.environ.get('LINDFIELDROBERTS_DATABASE_PORT')
    },
    'test': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}  
database = 'test' if DEBUG else 'production'

# https://docs.djangoproject.com/en/3.0/ref/settings/#databases
DATABASES = {
    'default': DATABASES_AVAILABLE[database]
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATIC_URL = '/static/'

# Extra places for collectstatic to find static files
STATICFILES_DIRS = []

# Activate Django-Heroku
django_heroku.settings(locals())

# For pip install django heroku, to prevent psycopg2 error:

# env LDFLAGS='-L/usr/local/lib -L/usr/local/opt/openssl/lib
# -L/usr/local/opt/readline/lib' pip install psycopg2==<version number>
